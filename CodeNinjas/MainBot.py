import os
import sys
import time
import random
import base64
import requests as req
from datetime import datetime
from threading import Thread
from fake_useragent import UserAgent
from aiohttp import ClientSession
import disnake
from disnake.ext import commands, tasks
from disnake.ui import button, View, Modal
from disnake import AppCmdInter, ApplicationCommandInteraction ,Embed
from disnake.ui import TextInput
from disnake import TextInputStyle
import requests
import json
import asyncio
import qrcode
intents = disnake.Intents.default()
intents.typing = True
intents.messages = True
intents.members = True
intents.message_content = True  
intents.presences = False
intents.guilds = True
client = disnake.Client(intents=intents)

############################################################################################################ SetUPbot

bot = commands.Bot(command_prefix="!", intents=intents)

messages = [
    "‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô /help üòò",
    "‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡πÄ‡∏≠‡∏î‡∏°‡∏¥‡∏ô /setup üéâ",
    "‡∏Ñ‡∏ô‡∏ó‡∏≥‡∏ö‡∏≠‡∏ó‡∏ô‡πà‡∏≤‡∏£‡∏±‡∏Å‡∏°‡∏≤‡∏Å‡∏Ñ‡∏£‡∏±‡∏ö üòä"
]
message_index = 0  

@bot.event
async def on_ready():
    print(f'Logged in as {bot.user.name}')
    update_message.start()  

@tasks.loop(seconds=3) 
async def update_message():
    global message_index
    await bot.change_presence(activity=disnake.Game(name=messages[message_index]))
    message_index = (message_index + 1) % len(messages) 

update_message.before_loop(bot.wait_until_ready)

config_file_path = 'config.json'
if os.path.exists(config_file_path):
    with open(config_file_path, 'r') as config_file:
        config = json.load(config_file)
else:
    print("Config file not found. Please create a config.json file.")

admin_ids = config.get("admin_ids", [])

############################################################################################################

@bot.event
async def on_member_join(member):
    channel_id = 1175830451366150164  # ‡∏£‡∏´‡∏±‡∏™‡πÑ‡∏≠‡∏î‡∏µ‡∏Ç‡∏≠‡∏á‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏ö‡∏≠‡∏ó‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
    channel = bot.get_channel(channel_id)
    channelM = bot.get_channel(1175832062104698911)
    channel_mention = channelM.mention

    # ‡∏™‡∏£‡πâ‡∏≤‡∏á Embed
    embed = disnake.Embed(title=f'‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö {member.name} ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå! üíñ',
                        description=f'‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏Ñ‡∏£‡∏±‡∏ö ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡πÑ‡∏î‡πâ‡πÄ‡∏ï‡πá‡∏°‡∏ó‡∏µ‡πà ‡πÅ‡∏•‡∏∞ ‡∏≠‡∏¢‡πà‡∏≤‡∏•‡∏∑‡∏°‡∏≠‡πà‡∏≤‡∏ô‡∏Å‡∏è‡∏Å‡∏±‡∏ô‡∏î‡πâ‡∏ß‡∏¢‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏ö\n\n'
                                    f'‡∏≠‡πà‡∏≤‡∏ô‡∏Å‡∏è‡∏ó‡∏µ‡πà‡∏´‡πâ‡∏≠‡∏á : {channel_mention}',
                        color=0xCC0000)  # Embed color
    # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û GIF
    embed.set_image(url='https://cdn.discordapp.com/attachments/1158812865898217522/1175834652297154692/standard_2.gif?ex=656cac5b&is=655a375b&hm=84f86fe4d84674b485cda31329cdd28e17cee6ef69d0da2a7fc14f105fb0a53e&')

    # ‡πÄ‡∏û‡∏¥‡πà‡∏° Icon ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡πâ‡∏≤
    embed.set_thumbnail(url=member.avatar.url)

    # ‡∏™‡πà‡∏á Embed ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î
    await channel.send(embed=embed)

@bot.event
async def on_member_remove(member):
    channel_id = 1175830581125328976  # ‡∏£‡∏´‡∏±‡∏™‡πÑ‡∏≠‡∏î‡∏µ‡∏Ç‡∏≠‡∏á‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏ö‡∏≠‡∏ó‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
    channel = bot.get_channel(channel_id)

    # ‡∏™‡∏£‡πâ‡∏≤‡∏á Embed
    embed = disnake.Embed(title=f'‡∏Ñ‡∏∏‡∏ì {member.name} ‡πÑ‡∏î‡πâ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡πÄ‡∏ã‡∏¥‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå! ü•≤',
                          description='‡πÉ‡∏ß‡πâ‡πÄ‡∏à‡∏≠‡∏Å‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏ö ‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡πÄ‡∏Ñ‡∏¢‡∏™‡∏ô‡πÉ‡∏à‡∏£‡πâ‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏≤',
                          color=0xBC57FF)  # ‡∏™‡∏µ Embed

    # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û GIF
    embed.set_image(url='https://cdn.discordapp.com/attachments/1158812865898217522/1175836666733277184/standard_3.gif?ex=656cae3b&is=655a393b&hm=d1ec2bc0bb588fd70034ac2ec13d4a9434f35dcbf5c0a46c59a06d3ab5d6163e&')

    # ‡πÄ‡∏û‡∏¥‡πà‡∏° Icon ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡πâ‡∏≤
    embed.set_thumbnail(url=member.avatar.url)

    # ‡∏™‡πà‡∏á Embed ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î
    await channel.send(embed=embed)

#####################################################################################################################

class Modalsetpas(disnake.ui.Modal):
    def __init__(self, generated_code):
        components = [
            disnake.ui.TextInput(
                label=f"‡∏£‡∏´‡∏±‡∏™‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∑‡∏≠ : {generated_code}",
                placeholder="‡∏£‡∏´‡∏±‡∏™‡∏ó‡∏µ‡πà‡∏ó‡πà‡∏≤‡∏ô‡πÄ‡∏´‡πá‡∏ô = ",
                custom_id="Password",
                max_length=20,
                style=disnake.TextInputStyle.short,
            ),
        ]
        super().__init__(title="‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ï‡∏±‡∏ß‡∏ï‡∏ô", components=components)
        self.generated_code = generated_code

    async def callback(self, inter: disnake.MessageInteraction):
        entered_code = inter.text_values["Password"]
        if entered_code == self.generated_code:
            # ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏£‡∏´‡∏±‡∏™‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
            role = disnake.utils.get(inter.guild.roles, name='„Äòü§µ‚Äç‚ôÇÔ∏è„Äô‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ï‡∏±‡∏ß‡∏ï‡∏ô‡πÅ‡∏•‡πâ‡∏ß')  # ‡πÅ‡∏ó‡∏ô YourRoleName ‡∏î‡πâ‡∏ß‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏¢‡∏®‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ
            if role:
                await inter.user.add_roles(role)
                await inter.response.send_message("‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ï‡∏±‡∏ß‡∏ï‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à", ephemeral=True)
            else:
                print("Error: Role not found.")
        else:
            # ‡∏´‡∏≤‡∏Å‡∏£‡∏´‡∏±‡∏™‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
            await inter.response.send_message("‡∏£‡∏´‡∏±‡∏™‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á", ephemeral=True)


class setpas(disnake.ui.View):
    def __init__(self, timeout=None):
        super().__init__(timeout=timeout)

    @disnake.ui.button(label='‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ï‡∏±‡∏ß‡∏ï‡∏ô', style=disnake.ButtonStyle.grey, emoji='<:SafetyJim:1175850271314808862>')
    async def ModalTokenChecker(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        generated_code = ''.join(random.choices('ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789', k=6))
        await interaction.response.send_modal(modal=Modalsetpas(generated_code))


@bot.command()
async def SetupSCN(inter: disnake.ApplicationCommandInteraction):
    user_id = inter.author.id
    if user_id in admin_ids:

        embed = disnake.Embed(
            title='‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ï‡∏±‡∏ß‡∏î‡πâ‡∏ß‡∏¢‡∏£‡∏´‡∏±‡∏™',
            color=disnake.Color.from_rgb(0, 0, 0),
            description="""```
‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏Ç‡πâ‡∏≤‡∏á‡∏•‡πà‡∏≤‡∏á

[+] ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ï‡∏±‡∏ß‡∏ï‡∏ô
```"""
        )
        embed.set_image(url='https://cdn.discordapp.com/attachments/1158812865898217522/1175850006515818566/standard_4.gif?ex=656cbaa7&is=655a45a7&hm=9f322994de16f3971a3c30589dbead84155a344966cc54b28f6b5c2c6eb666e0&')

        view = setpas()

        await inter.channel.purge()

        await inter.send(embed=embed, view=view)
    else:
        await inter.send("‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ", ephemeral=True)

###################################################################################################################

@bot.command()
async def storeon(inter: disnake.ApplicationCommandInteraction):
    user_id = inter.author.id
    if user_id in admin_ids:
        embed = disnake.Embed(
            title='‡∏£‡πâ‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏≤‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏•‡πâ‡∏ß!',
            description='‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏ó‡∏∏‡∏Å‡∏ó‡πà‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏°‡∏≤‡πÄ‡∏¢‡∏µ‡πà‡∏¢‡∏°‡∏ä‡∏°',
            color=disnake.Color.green()
        )
        embed.set_image(url='https://cdn.discordapp.com/attachments/1158812865898217522/1175857991770181715/standard_5.gif?ex=656cc217&is=655a4d17&hm=1ba4c37cbfe5bdb6335a004d43ff7f80293f6bf00f9c0ea7cdee981c1e66b137&')

        # ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà 1175851927624491070 ‡∏î‡πâ‡∏ß‡∏¢ ID ‡∏Ç‡∏≠‡∏á‡∏´‡πâ‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
        channel = bot.get_channel(1175851927624491070)
        
        await channel.send(embed=embed)
    else:
        await inter.send("‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ", ephemeral=True)

@bot.command()
async def storeoff(inter: disnake.ApplicationCommandInteraction):
    user_id = inter.author.id
    if user_id in admin_ids:
        embed = disnake.Embed(
            title='‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡∏£‡πâ‡∏≤‡∏ô‡πÄ‡∏£‡∏≤‡∏õ‡∏¥‡∏î‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß‡∏Ñ‡∏£‡∏±‡∏ö‡∏ú‡∏°!',
            description='‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢‡πÉ‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏°‡πà‡∏™‡∏∞‡∏î‡∏ß‡∏Å‡∏ô‡∏∞‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πâ‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏ö',
            color=disnake.Color.red()
        )
        embed.set_image(url='https://cdn.discordapp.com/attachments/1158812865898217522/1175858011911237662/standard_6.gif?ex=656cc21c&is=655a4d1c&hm=1498df400fb6f5d19e1ae1ec17f10f07384e740282efcd14ee9a3fde32c3d3da&')

        # ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà 1175851927624491070 ‡∏î‡πâ‡∏ß‡∏¢ ID ‡∏Ç‡∏≠‡∏á‡∏´‡πâ‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
        channel = bot.get_channel(1175851927624491070)
        
        await channel.send(embed=embed)
    else:
        await inter.send("‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ", ephemeral=True)

###################################################################################################################

@bot.command()
async def add_credit(inter: disnake.ApplicationCommandInteraction, member: disnake.Member, points: int):
    user_id = inter.author.id
    if user_id in admin_ids:
        user = member
        file_DatabasePoint = os.path.join('DataBase.json')
        
        with open(file_DatabasePoint, 'r') as file:
            database = json.load(file)

        user_id_str = str(user.id)
        
        if user_id_str not in database:
            database[user_id_str] = {"Point": 0}

        # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Ñ‡∏µ‡∏¢‡πå "Point" ‡πÉ‡∏ô dictionary ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
        if "Point" not in database[user_id_str]:
            database[user_id_str]["Point"] = 0

        database[user_id_str]["Point"] += points

        with open(file_DatabasePoint, 'w') as file:
            json.dump(database, file, indent=4)

        total_points = database[user_id_str]['Point']
        await inter.send(f"‡πÄ‡∏û‡∏¥‡πà‡∏° Points ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô {points:,} ‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö {user.display_name}. Point ‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠: {total_points:,}")
    else:
        await inter.send("‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ", ephemeral=True)

@bot.command(name="check_point", aliases=["cp"])
async def check_point(ctx, member: disnake.Member = None):
    if member is None:
        user_id_str = str(ctx.author.id)
        file_DatabasePoint = os.path.join('DataBase.json')

        with open(file_DatabasePoint, 'r') as file:
            database = json.load(file)

        if user_id_str in database and "Point" in database[user_id_str]:
            total_points = database[user_id_str]["Point"]
            formatted_points = "{:,}".format(total_points)
            await ctx.send(f"Points ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì ‡∏Ñ‡∏∑‡∏≠: {formatted_points}")
        else:
            await ctx.send("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Points ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏∏‡∏ì")
        return

    user_id_str = str(member.id)
    file_DatabasePoint = os.path.join('DataBase.json')

    with open(file_DatabasePoint, 'r') as file:
        database = json.load(file)

    if user_id_str in database and "Point" in database[user_id_str]:
        total_points = database[user_id_str]["Point"]
        formatted_points = "{:,}".format(total_points)
        await ctx.send(f"Points ‡∏Ç‡∏≠‡∏á {member.display_name} ‡∏Ñ‡∏∑‡∏≠: {formatted_points}")
    else:
        await ctx.send("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Points ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ô‡∏µ‡πâ")

###################################################################################################################

bot.run('MTE3NTgzNzM2MTE4ODM4ODg2NA.Gi5YZ4.L51UjI6JgpTtCKfsKBZjMMhGtozaGLnFFh_2Go')